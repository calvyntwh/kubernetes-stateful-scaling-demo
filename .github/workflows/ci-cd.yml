---
name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --frozen
        uv add --dev pytest pytest-asyncio httpx

    - name: Run tests
      run: |
        # Import test
        uv run python -c "import main; print('‚úÖ Import successful')"

        # Security tests
        uv run python test-security.py

        # Health check test
        echo "üè• Starting application for health check..."
        uv run uvicorn main:app --host 0.0.0.0 --port 8000 &
        APP_PID=$!
        sleep 5

        # Test health endpoint
        curl -f http://localhost:8000/health || (echo "‚ùå Health check failed" && kill $APP_PID && exit 1)
        echo "‚úÖ Health check passed"

        # Test main page
        curl -f http://localhost:8000/ > /dev/null || (echo "‚ùå Main page test failed" && kill $APP_PID && exit 1)
        echo "‚úÖ Main page test passed"

        # Clean up
        kill $APP_PID
        echo "‚úÖ All tests passed"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-demo:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: demo
      url: https://demo.stateful-demo.local

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Security validation before deployment
      run: |
        echo "üîí Running security validation..."
        bash validate-security.sh

    - name: Deploy to demo environment
      run: |
        echo "üé≠ Deploying to demo environment with Kustomize..."
        echo "kubectl apply -k k8s/overlays/demo"
        echo "kubectl wait --for=condition=ready pod -l app=stateful-app --namespace=stateful-demo --timeout=120s"

    - name: Post-deployment health check
      run: |
        echo "üè• Running post-deployment health checks..."
        echo "kubectl port-forward -n stateful-demo svc/stateful-app-service 8080:80 &"
        echo "sleep 5"
        echo "curl -f http://localhost:8080/health || echo 'Health check will be available after real deployment'"
        echo "‚úÖ Demo deployment completed successfully"

  security-compliance:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run compliance checks
      run: |
        echo "üîç Running security compliance checks for PR..."
        bash validate-security.sh
        echo "‚úÖ Compliance validation completed"
